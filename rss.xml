<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title></title>
        <link>/</link>
        <description></description>
        <lastBuildDate>Fri, 05 Jan 2024 20:02:34 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - November 2023]]></title>
            <link>/blog/2023/11/30/community-spotlight-update-november-2023/</link>
            <guid>/blog/2023/11/30/community-spotlight-update-november-2023/</guid>
            <pubDate>Thu, 30 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!

It's been a couple of months since our last update so we have a lot of updates to share with you.

Please see below for a roundup of the highlights:

Proposal for Cadence Native Authentication

Community member Mantas Sidlauskas has drafted a proposal around Cadence native authentication and is asking for community feedback. If you are interested in reviewing the current proposal and providing comments or feedback then please find the proposal details at the link below:

Cadence Native Authentication Proposal

 This is a great example of how we can focus on collaborating together to find a collective solution. A big thank you to Mantas for initiating this work and we hope to see the result ...]]></description>
        </item>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - August 2023]]></title>
            <link>/blog/2023/08/31/community-spotlight-august-2023/</link>
            <guid>/blog/2023/08/31/community-spotlight-august-2023/</guid>
            <pubDate>Thu, 31 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!

Please see below for a roundup of the highlights:

More Cadence How To's

You might have noticed that we have had a few more contributions to our blog from Chris Qin. Chris has been busy sharing insights, and tips on a few important Cadence topics. The objective is to help the community with any potential problems.

Here are the latest topics:

Bad Practices and Anti-Patterns with Cadence - Part 1

Non-Determistic Errors, Replayers and Shadowers

Even if you have not encountered these use cases - it is good to be prepared and have a solution ready.Please take a look and let us have your feedback.

Chris is also going to take a look at ...]]></description>
        </item>
        <item>
            <title><![CDATA[Non-deterministic errors, replayers and shadowers]]></title>
            <link>/blog/2023/08/27/nondeterministic-errors-replayers-shadowers/</link>
            <guid>/blog/2023/08/27/nondeterministic-errors-replayers-shadowers/</guid>
            <pubDate>Sun, 27 Aug 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[It is conceivable that developers constantly update their Cadence workflow code based upon new business use cases and needs. However,
the definition of a Cadence workflow must be deterministic because behind the scenes cadence uses event sourcing to construct
the workflow state by replaying the historical events stored for this specific workflow. Introducing components that are not compatible
with an existing running workflow will yield to non-deterministic errors and sometimes developers find it tricky to debug. Consider the
following workflow that executes two activities.

func SampleWorkflow(ctx workflow.Context, data string) (string, error) {
    ao := workflow.ActivityOptions{
        ScheduleToStartTimeout: time.Minute,
        StartToCloseTimeout:    time.Minute,
    }
    ctx = workflow.WithActivityOptions(ctx, ao)
    var result1 string
    err := workflow.ExecuteActivity(ctx, ActivityA, data).Get(ctx, &result1)
    if err != nil {
        return "", err
    }
    v ...]]></description>
        </item>
        <item>
            <title><![CDATA[Cadence Community Spotlight Update - July 2023]]></title>
            <link>/blog/2023/07/31/community-spotlight-july-2023/</link>
            <guid>/blog/2023/07/31/community-spotlight-july-2023/</guid>
            <pubDate>Mon, 31 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to the latest of our regular monthly Community Spotlight updates that gives you news from in and around the Cadence community!

Please see below for a roundup of the highlights:

Getting Started with Cadence

Are you new to  Cadence and want to understand the basic concepts and architecture? Well we have some great information for you!

Community member Chris Qin has written a short blog post that takes you through the the three main components that make up a Cadence application. Please take a look and feel free to give us your comments and feedback.

Thanks Chris for sharing your knowledge and helping others to get started.

Cadence Go Client v1.0 Released

This month saw the release of v1.0 of the Cadence Go Client. Note that the work done on this release was as a result ...]]></description>
        </item>
        <item>
            <title><![CDATA[Write your first workflow with Cadence]]></title>
            <link>/blog/2023/07/16/write-your-first-workflow-with-cadence/</link>
            <guid>/blog/2023/07/16/write-your-first-workflow-with-cadence/</guid>
            <pubDate>Sun, 16 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We have covered basic components of Cadence and how to implement a Cadence worker on local environment in previous blogs. In this blog, let's write your very first HelloWorld workflow with Cadence. I've started the Cadence backend server in background and registered a domain named test-domain. You may use the code snippet for the worker service in this blog  Let's first write a activity, which takes a single string argument and print a log in the console.

func helloWorldActivity(ctx context.Context, name string) (string, error) {
	logger := activity.GetLogger(ctx)
	logger.Info("helloworld activity started")
	return "Hello " + name + "!", nil
}

Then let's write a workflow that invokes this activity
func helloWorldWorkflow(ctx workflow.Context, name string) error {
	ao := workflow.ActivityOptions{
 ...]]></description>
            <enclosure url="/../../shared/img/cadence_ui.png">
            </enclosure>
        </item>
    </channel>
</rss>